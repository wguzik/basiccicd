name: CI weather app

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  analyze:
    name: SAST Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: javascript, typescript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:javascript"

  build:
    name: Build and Test
    needs: analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm ci
        
      - name: Build Application
        run: npm run build
        
      - name: Run Tests with Coverage
        run: npm run test:coverage
        continue-on-error: true

  docker:
    name: Docker Build and Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Build Docker image
        run: docker build -t weather-app .
        
      - name: Run Docker container
        run: |
          docker run -d \
            -p 3000:3000 \
            -e WEATHER_API_KEY=${{ secrets.WEATHER_API_KEY }} \
            --name weather-app-container \
            weather-app
          
          # Wait for container to start
          sleep 5
        
      - name: Test running container
        run: |
          # Test the root endpoint
          curl -f http://localhost:3000/ || exit 1
          
          # Test the weather endpoint with Zakopane
          response=$(curl -f http://localhost:3000/weather/Zakopane)
          if [[ $response == *"tired"* ]]; then
            echo "App is tired, boss."
            exit 1
          fi
        
      - name: Cleanup
        if: always()
        run: docker rm -f weather-app-container 