name: CD Web App Deployment

on:
    push:
      branches: [ main ]
    pull_request:
      branches: [ main ]
env:
  AZURE_WEBAPP_NAME: ${{ secrets.AZURE_WEBAPP_NAME }}
  AZURE_WEBAPP_PACKAGE_PATH: './publish'

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build
        
      - name: Get commit hash
        id: commit
        run: echo "sha_short=$(git rev-parse --short=8 HEAD)" >> $GITHUB_OUTPUT

      - name: Save commit hash
        run: echo ${{ steps.commit.outputs.sha_short }} > commit_hash.txt
        
      - name: Zip application
        run: zip -r weather-app-${{ steps.commit.outputs.sha_short }}.zip ./* -r

      - name: Upload temp artifact
        uses: actions/upload-artifact@v4
        with:
          name: commit-hash
          path: commit_hash.txt
          retention-days: 1
        
      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: weather-app-${{ steps.commit.outputs.sha_short }}
          path: weather-app-${{ steps.commit.outputs.sha_short }}.zip
          retention-days: 1

  deploy-staging:
    name: Deploy to Staging
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download temp artifact
        uses: actions/download-artifact@v4
        with:
          name: commit-hash

      - name: Get commit hash
        id: commit
        run: cat commit_hash.txt >> $GITHUB_OUTPUT
      
      - name: Download app artifact
        uses: actions/download-artifact@v4
        with:
          name: weather-app-${{ steps.commit.outputs.sha_short }}
          
      - name: Extract app artifact
        run: unzip weather-app-${{ steps.commit.outputs.sha_short }}.zip -d ./app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to staging slot
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: './app'
          slot-name: 'staging'

      - name: Verify deployment
        run: |
          sleep 30  # czekaj na start aplikacji
          STAGING_URL="https://${{ env.AZURE_WEBAPP_NAME }}-staging.azurewebsites.net"
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $STAGING_URL)
          if [ $HTTP_STATUS -ne 200 ]; then
            echo "Deployment verification failed!"
            exit 1
          fi

  deploy-production:
    name: Deploy to Production
    needs: deploy-staging
    runs-on: ubuntu-latest
    steps:
      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.TOKEN }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          message: 'Czy chcesz wdrożyć na produkcję?'

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Swap slots
        run: |
          az webapp deployment slot swap \
            --name ${{ env.AZURE_WEBAPP_NAME }} \
            --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} \
            --slot staging \
            --target-slot production